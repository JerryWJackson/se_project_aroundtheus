!function(){"use strict";const e={baseUrl:"https://around-api.en.tripleten-services.com/v1",defaultHeaders:{authorization:"ef1674b3-2f84-46ba-ade1-b5216183ce24","Content-Type":"application/json"}},t={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},s=document.querySelector("#profile-edit-button"),r=document.querySelector("#add-new-card-button"),i=document.querySelector("#avatar-edit-button"),o=(document.querySelectorAll(".popup"),document.querySelectorAll(".cards__list"),Array.from(document.querySelectorAll(t.formSelector))),n=document.querySelector("#profile-edit-popup"),a=(n.querySelector("#profile-edit-popup-form"),document.querySelector("#add-new-card-popup")),u=(a.querySelector(".popup__form"),document.querySelector("#preview-image-popup"));document.querySelector(".cards__list"),u.querySelector("#preview-image"),u.querySelector(".popup__preview-text"),document.querySelector("#card-template").content.firstElementChild,document.querySelector(".profile__avatar-image"),document.querySelector("#name"),document.querySelector("#about"),n.querySelector("#edit-popup-close-button"),document.querySelector("#title"),document.querySelector("#popup"),a.querySelector("#add-new-card-popup-close-button"),u.querySelector("#preview-image-popup-close-button");class c{constructor(e,t,s,r,i){let{name:o,link:n,_id:a,isLiked:u}=e;this._name=o,this._link=n,this.cardId=a,this.isLiked=u,this._cardSelector=t,this._handleImageClick=s,this._handleDeleteConfirmSubmit=r,this._handleCardLike=i,this._confirmDeleteImagePopup=document.querySelector("#confirm-image-delete-popup"),this._data={location:this._name,link:this._link}}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleCardLike(this)})),this._cardDeleteIcon.addEventListener("click",(()=>{this._handleDeleteConfirmSubmit(this)})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick(this._data)}))}handleDeleteCard(){this._cardElement.remove(),this._cardElement=null}updateLikeStatus(e){console.log(e),this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._cardLikeButton.classList.add("card__like-button_active"):this._cardLikeButton.classList.remove("card__like-button_active")}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteIcon=this._cardElement.querySelector(".card__delete-icon"),this._cardImage=this._cardElement.querySelector(".card__image"),this.cardLocation=this._cardElement.querySelector(".card__location"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this.cardLocation.textContent=this._name,this._setEventListeners(),this._cardElement}}class l{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector)}_showInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorMessageElement.textContent=e.validationMessage,this._errorMessageElement.classList.add(this._errorClass)}_hideInputError(e){this._errorMessageElement=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this._errorMessageElement.textContent="",this._errorMessageElement.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}toggleButtonState(){this._foundInvalid=!1,this._inputElements.forEach((e=>{e.validity.valid||(this._foundInvalid=!0)})),this._foundInvalid?this.disableSubmitButton():this.enableSubmitButton()}_setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}disableSubmitButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}enableSubmitButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class d{constructor(e){let{popupSelector:t}=e;this._popupElement=document.querySelector(t)}open(){this._popupElement.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("click",(e=>{e.target.classList.contains("popup")&&this.close()})),this._closeButton=this._popupElement.querySelector(".popup__close"),this._closeButton.addEventListener("click",(()=>{this.close()}))}}class h extends d{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector(".popup__form"),this._handleFormSubmit=t,this._inputItems=this._popupForm.querySelectorAll(".popup__input"),this._submitButton=this._popupForm.querySelector(".popup__button"),this._submitButtonValue=this._submitButton.textContent}_getInputValues(){const e={};return this._inputItems.forEach((t=>{e[t.name]=t.value})),e}setInputValues(e){this._inputItems.forEach((t=>{t.value=e[t.name]}))}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}setLoading(e){this._submitButton.textContent=e}}class p{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}const _={};(e=>{o.forEach((t=>{const s=new l(e,t),r=t.id;_[r]=s,s.enableValidation()}))})(t);const m=new class{constructor(){this._baseUrl=e.baseUrl,this._headers=e.defaultHeaders,this._userRoute=`${this._baseUrl}/users/me`,this._cardRoute=`${this._baseUrl}/cards`}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}async _request(e,t){return await fetch(e,t).then(this._checkResponse)}fetchUserInfo(){return this._request(this._userRoute,{headers:this._headers}).catch((e=>{console.error(e)}))}editUserInfo(e){let{name:t,about:s}=e;return this._request(this._userRoute,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).catch((e=>{console.error(e)}))}editUserAvatar(e){return this._request(`${this._userRoute}/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).catch((e=>{console.error(e)}))}async getInitialCards(){return await this._request(`${this._cardRoute}`,{headers:this._headers}).catch((e=>{console.error(e)}))}fetchCurrentCards(){return this._request(`${this._cardRoute}`,{headers:this._headers}).catch((e=>{console.error(e)}))}addCard(e){return this._request(`${this._cardRoute}`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e.name,link:e.link})}).catch((e=>{console.error(e)}))}deleteCard(e){return this._request(`${this._cardRoute}/${e.cardId}`,{method:"DELETE",headers:this._headers}).catch((e=>{console.error(e)}))}likeCard(e){return this._request(`${this._cardRoute}/${e}/likes`,{method:"PUT",headers:this._headers,body:JSON.stringify({isLiked:!0})}).catch((e=>{console.error(e)}))}dislikeCard(e){return this._request(`${this._cardRoute}/${e}/likes`,{method:"DELETE",headers:this._headers}).catch((e=>{console.error(e)}))}}(e);let S;m.getInitialCards().then((e=>{S=new p({items:e,renderer:e=>{const t=L(e);S.addItem(t)}},".cards__list"),S.renderItems()})).catch((e=>{console.error(e)}));const v=new h("#profile-edit-popup",(function(e){v.setLoading("Saving..."),g.setUserInfo(e),m.editUserInfo(e).then((()=>{v.close()})).finally((()=>v.setLoading("Save")))}));v.setEventListeners();const E=new class extends d{constructor(e){super({popupSelector:e}),this._previewImage=this._popupElement.querySelector("#preview-image"),this._previewText=this._popupElement.querySelector(".popup__preview-text")}open(e){console.log(e),this._previewImage.src=e.link,this._previewImage.alt=e.location,this._previewText.textContent=e.location,super.open()}}("#preview-image-popup");E.setEventListeners();const f=new h("#add-new-card-popup",(function(e){f.setLoading("Saving...");const t=L(e);S.addItem(t),m.addCard(e).then((()=>{f.close()})).finally((()=>f.setLoading("Create")))}));f.setEventListeners();const b=new class extends d{constructor(e,t){super({popupSelector:e}),this._popupForm=this._popupElement.querySelector("#confirm-image-delete-popup-form"),this._handleDeleteConfirmSubmit=t}setSubmitAction(e){this._handleSubmitCallback=e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmitCallback()})),super.setEventListeners()}}("#confirm-image-delete-popup",q);b.setEventListeners();const y=new h("#change-profile-avatar-popup",(function(e){y.setLoading("Saving..."),g.setUserAvatar(e.link),m.editUserAvatar(e.link).then((()=>{y.close()})).finally((()=>y.setLoading("Save")))}));y.setEventListeners();const g=new class{constructor(e,t,s){this._name=document.querySelector(e),this._about=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent,avatar:this._avatar.src}}setUserInfo(e){let{name:t,about:s}=e;this._name.textContent=t,this._about.textContent=s}setUserAvatar(e){this._avatar.src=e}}(".profile__name",".profile__description",".profile__avatar-image");function L(e){return new c(e,"#card-template",k,q,C).getView()}function k(e){E.open(e)}function q(e){b.open(),b.setSubmitAction((()=>{m.deleteCard(e),e.handleDeleteCard(),b.close()}))}function C(e){e.isLiked?m.dislikeCard(e.cardId).then((()=>{e.updateLikeStatus(!1)})):m.likeCard(e.cardId).then((()=>{e.updateLikeStatus(!0)}))}m.fetchUserInfo().then((e=>{let t=e;g.setUserInfo(t.name,t.about),g.setUserAvatar(t.avatar)})),s.addEventListener("click",(()=>{const e=g.getUserInfo();v.setInputValues(e),_["profile-edit-popup-form"].resetValidation(),v.open()})),r.addEventListener("click",(()=>{_["create-place-popup-form"].toggleButtonState(),f.open()})),i.addEventListener("click",(()=>{_["change-profile-avatar-popup-form"].toggleButtonState(),y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,